# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-12-01 22:33
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Corridor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_from', models.CharField(choices=[('Belgium', 'Belgium'), ('Canada', 'Canada'), ('France', 'France'), ('Sweden', 'Sweden'), ('Denmark', 'Denmark')], default='Belgium', max_length=120)),
                ('country_from_flag', models.CharField(choices=[('assets/flags/Belgium.png', 'assets/flags/Belgium.png'), ('assets/flags/Canada.png', 'assets/flags/Canada.png'), ('assets/flags/France.png', 'assets/flags/France.png'), ('assets/flags/Sweden.png', 'assets/flags/Sweden.png'), ('assets/flags/Denmark.png', 'assets/flags/Denmark.png')], default='assets/flags/Belgium.png', max_length=120)),
                ('country_from_currency', models.CharField(blank=True, max_length=250, null=True)),
                ('country_to', models.CharField(choices=[('Belgium', 'Belgium'), ('Canada', 'Canada'), ('France', 'France'), ('Sweden', 'Sweden'), ('Denmark', 'Denmark')], default='Belgium', max_length=120)),
                ('country_to_flag', models.CharField(choices=[('assets/flags/Belgium.png', 'assets/flags/Belgium.png'), ('assets/flags/Canada.png', 'assets/flags/Canada.png'), ('assets/flags/France.png', 'assets/flags/France.png'), ('assets/flags/Sweden.png', 'assets/flags/Sweden.png'), ('assets/flags/Denmark.png', 'assets/flags/Denmark.png')], default='assets/flags/Belgium.png', max_length=120)),
                ('country_to_currency', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Quarter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter', models.CharField(max_length=250)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('rate', models.CharField(blank=True, max_length=250, null=True)),
                ('firm', models.CharField(blank=True, max_length=250, null=True)),
                ('fee', models.CharField(blank=True, max_length=250, null=True)),
                ('ExchangeRateMargin', models.CharField(blank=True, max_length=250, null=True)),
                ('TotalCostPercent', models.CharField(blank=True, max_length=250, null=True)),
                ('TotalCostEur', models.CharField(blank=True, max_length=250, null=True)),
                ('AmountReceived', models.CharField(blank=True, max_length=250, null=True)),
                ('product_availability', models.CharField(choices=[('Branch', 'Branch'), ('Card', 'Card'), ('Cash', 'Cash'), ('Mobile', 'Mobile'), ('Online', 'Online'), ('Prepaid card', 'Prepaid card')], default='Branch', max_length=120)),
                ('product_availability_icon', models.CharField(choices=[('assets/icons/productavailability/bank_account.png', 'assets/icons/productavailability/bank_account.png'), ('assets/icons/productavailability/card.png', 'assets/icons/productavailability/card.png'), ('assets/icons/productavailability/cash.png', 'assets/icons/productavailability/cash.png'), ('assets/icons/productavailability/mobile.png', 'assets/icons/productavailability/mobile.png'), ('assets/icons/productavailability/online.png', 'assets/icons/productavailability/online.png'), ('assets/icons/productavailability/prepaid_card.png', 'assets/icons/productavailability/prepaid_card.png')], default='assets/icons/productavailability/bank_account.png', max_length=120)),
                ('transfer_speed_definition', models.CharField(choices=[('Two days', 'Two days'), ('3-5 days', '3-5 days'), ('6 and more days', '6 and more days'), ('Less than an hour', 'Less than an hour'), ('Next day', 'Next day'), ('Same day', 'Same day')], default='Two days', max_length=120)),
                ('transfer_speed_icon', models.CharField(choices=[('assets/icons/transferspeed/2_days.png', 'assets/icons/transferspeed/2_days.png'), ('assets/icons/transferspeed/3_5-days.png', 'assets/icons/transferspeed/3_5-days.png'), ('assets/icons/transferspeed/6_and_more_days.png', 'assets/icons/transferspeed/6_and_more_days.png'), ('assets/icons/transferspeed/less_than_an_hour.png', 'assets/icons/transferspeed/less_than_an_hour.png'), ('assets/icons/transferspeed/next_day.png', 'assets/icons/transferspeed/next_day.png'), ('assets/icons/transferspeed/same_day.png', 'assets/icons/transferspeed/same_day.png')], default='assets/icons/transferspeed/2_days.png', max_length=120)),
                ('network_coverage_definition', models.CharField(choices=[('Main city', 'Main city'), ('Major cities', 'Major cities'), ('Nationwide', 'Nationwide'), ('Rural only', 'Rural only'), ('Urban only', 'Urban only')], default='Main city', max_length=120)),
                ('network_coverage_icon', models.CharField(choices=[('assets/icons/network/main_city.png', 'assets/icons/network/main_city.png'), ('assets/icons/network/major_cities.png', 'assets/icons/network/major_cities.png'), ('assets/icons/network/nationwide.png', 'assets/icons/network/nationwide.png'), ('assets/icons/network/rural_only.png', 'assets/icons/network/rural_only.png'), ('assets/icons/network/urban_only.png', 'assets/icons/network/urban_only.png')], default='assets/icons/network/main_city.png', max_length=120)),
                ('corridor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='corridorname', to='transactions.Corridor')),
                ('quarter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='transactions.Quarter')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
    ]
