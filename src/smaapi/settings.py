"""
Django settings for smaapi project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import mongoengine

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'i@3!@lls!b=daqh1suuvuw#)4_728^jck0cwe7-&i(8ft*3xfa'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []




# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',    
    'transactions.apps.TransactionsConfig',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',    
]

ROOT_URLCONF = 'smaapi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'smaapi.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# DATABASES = {
#     'default':{
#         'ENGINE':'django.db.backends.mysql',
#         'NAME':'smaapi',
#         'USER':'admin',
#         'PASSWORD':'administrator',
#         'HOST':'localhost',
#         'PORT':'',
#     }
# }

# DATABASES = {
#     'default':{
#         'ENGINE':'',
#     }
# }

# SESSION_ENGINE = 'mongoengine.django.sessions'

# DBNAME = 'smaapi'

# _MONGODB_USER = 'admin'
# _MONGODB_PASSWD = 'administrator'
# _MONGODB_HOST = 'ds147304.mlab.com:47304'
# _MONGODB_NAME = 'smaapi'
# _MONGODB_DATABASE_HOST = \
#     'mongodb://%s:%s@%s/%s' \
#     % (_MONGODB_USER, _MONGODB_PASSWD, _MONGODB_HOST, _MONGODB_NAME)

# # mongoengine.connect(_MONGODB_NAME, host=_MONGODB_DATABASE_HOST)

# # mongodb://<dbuser>:<dbpassword>@ds147304.mlab.com:47304/smaapi



# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static_in_env", "static_root")
    
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static_in_pro", "our_static"),
    #os.path.join(BASE_DIR, "static_in_env"),
    #'/var/www/static/',
)

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), "static_in_env", "media_root")

#cors
CORS_ORIGIN_WHITELIST = (
    'google.com',
    'localhost:8000/transactions/',
    'localhost:8100'
)

COUNTRIES = (
    ("Belgium","Belgium"),
    ("Canada","Canada"),
    ("France","France"),
    ("Sweden","Sweden"),
    ("Denmark","Denmark"),
)

FLAGS = (
    ("assets/flags/Belgium.png","assets/flags/Belgium.png"),
    ("assets/flags/Canada.png","assets/flags/Canada.png"),
    ("assets/flags/France.png","assets/flags/France.png"),
    ("assets/flags/Sweden.png","assets/flags/Sweden.png"),
    ("assets/flags/Denmark.png","assets/flags/Denmark.png"),
)

NETWORK_COVERAGE_ICON = (
    ("assets/icons/network/main_city.png","assets/icons/network/main_city.png"),
    ("assets/icons/network/major_cities.png","assets/icons/network/major_cities.png"),
    ("assets/icons/network/nationwide.png","assets/icons/network/nationwide.png"),
    ("assets/icons/network/rural_only.png","assets/icons/network/rural_only.png"),
    ("assets/icons/network/urban_only.png","assets/icons/network/urban_only.png")
)

NETWORK_COVERAGE_DEFINITION = (
    ("Main city","Main city"),
    ("Major cities","Major cities"),
    ("Nationwide","Nationwide"),
    ("Rural only","Rural only"),
    ("Urban only","Urban only")
)

PRODUCT_AVAILABILITY_ICON = (
    ("assets/icons/productavailability/bank_account.png","assets/icons/productavailability/bank_account.png"),
    ("assets/icons/productavailability/card.png","assets/icons/productavailability/card.png"),
    ("assets/icons/productavailability/cash.png","assets/icons/productavailability/cash.png"),
    ("assets/icons/productavailability/mobile.png","assets/icons/productavailability/mobile.png"),
    ("assets/icons/productavailability/online.png","assets/icons/productavailability/online.png"),
    ("assets/icons/productavailability/prepaid_card.png","assets/icons/productavailability/prepaid_card.png")
)

PRODUCT_AVAILABILITY_DEFINITION = (
    ("Branch","Branch"),
    ("Card","Card"),
    ("Cash","Cash"),
    ("Mobile","Mobile"),
    ("Online","Online"),
    ("Prepaid card","Prepaid card")
)

TRANSFER_SPEED_ICON = (
    ("assets/icons/transferspeed/2_days.png","assets/icons/transferspeed/2_days.png"),
    ("assets/icons/transferspeed/3_5-days.png","assets/icons/transferspeed/3_5-days.png"),
    ("assets/icons/transferspeed/6_and_more_days.png","assets/icons/transferspeed/6_and_more_days.png"),
    ("assets/icons/transferspeed/less_than_an_hour.png","assets/icons/transferspeed/less_than_an_hour.png"),
    ("assets/icons/transferspeed/next_day.png","assets/icons/transferspeed/next_day.png"),
    ("assets/icons/transferspeed/same_day.png","assets/icons/transferspeed/same_day.png")
)

TRANSFER_SPEED_DEFINITION = (
    ("Two days","Two days"),
    ("3-5 days","3-5 days"),
    ("6 and more days","6 and more days"),
    ("Less than an hour","Less than an hour"),
    ("Next day","Next day"),
    ("Same day","Same day")
)
